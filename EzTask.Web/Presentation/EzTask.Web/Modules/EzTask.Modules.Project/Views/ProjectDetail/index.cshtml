@model ProjectViewModel
@section styles{
    <link rel="stylesheet" href="~/project/css/project.css">
}
@section Scripts{
    <script src="~/project/js/project.js"></script>
}
@section header{
    <h1>
        Project: @Model.Project.ProjectName
        <small>Project code: @Model.Project.ProjectCode</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li><a asp-action="Index" asp-controller="Project">Project</a></li>
        <li class="active">@Model.Project.ProjectCode</li>
    </ol>
}

<div class="box">
    <div class="box-header with-border">
        <h3 class="box-title"><i class="fa fa-bandcamp text-green"></i> Project information</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool"
                    data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="col-xs-4">
                <p class="under-line-dot"><i class="fa fa-qrcode"> Project Code: @Model.Project.ProjectCode</i></p>
                <p class="under-line-dot"> <i class="fa fa-book"> Project Name: @Model.Project.ProjectName</i></p>
                <p class="under-line-dot"> <i class="fa fa-user-circle"> Manager: @Model.Project.Owner.DisplayName</i></p>
            </div>
            <div class="col-xs-4">
                <p class="under-line-dot"><i class="fa fa-qrcode"> Total of phrase: @Model.TotalPhrase</i></p>
                <p class="under-line-dot"><i class="fa fa-qrcode"> Total of task: @Model.TotalTask</i></p>
                <p class="under-line-dot"><i class="fa fa-qrcode"> Total of member: @Model.TotalMember</i></p>
            </div>
            <div class="col-xs-4">
                <p class="under-line-dot"><i class="fa fa-calendar-o"> Created date: @Model.Project.CreatedDate.ToString("dd/MM/yyy")</i></p>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <i class="fa fa-circle text-green"></i><span class="space-left">Status: Project is @Model.Project.Status.ToString().ToLower()</span>
    </div>
</div>

<div class="project-detail-summary">
    <div class="row">
        <div class="col-md-4 col-sm-6 col-xs-12">
            <div class="info-box bg-light-blue">
                <span class="info-box-icon"><i class="fa fa-thumbs-o-up"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Open Phrases</span>
                    <span class="info-box-number">@Model.TotalOpenPhrase</span>

                    <div class="progress">
                        <div class="progress-bar" style="width: @Model.PercentOpenPhrase%"></div>
                    </div>
                    <span class="progress-description">
                        @Model.PercentOpenPhrase% Take in @Html.PrintNumberWithText("Phrase", Model.TotalPhrase)
                    </span>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-sm-6 col-xs-12">
            <div class="info-box bg-green">
                <span class="info-box-icon"><i class="fa fa-check-circle"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Closed Phrases</span>
                    <span class="info-box-number">@Model.TotalClosedPhrase</span>

                    <div class="progress">
                        <div class="progress-bar" style="width: @Model.PercentClosedPhrase%"></div>
                    </div>
                    <span class="progress-description">
                        @Model.PercentClosedPhrase% Take in @Html.PrintNumberWithText("Phrase", Model.TotalPhrase)
                    </span>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-sm-6 col-xs-12">
            <div class="info-box bg-red">
                <span class="info-box-icon"><i class="fa fa-times-circle"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Failed Phrases</span>
                    <span class="info-box-number">@Model.TotalFailedPhrase</span>

                    <div class="progress">
                        <div class="progress-bar" style="width: @Model.PercentFailedPhrase%"></div>
                    </div>
                    <span class="progress-description">
                        @Model.PercentFailedPhrase% Take in @Html.PrintNumberWithText("Phrase", Model.TotalPhrase)
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="task-table">
    <div class="row">
        @foreach (var item in Model.TaskList)
        {
            var phraseName = item.First().Phrase.PhraseName;

            <div class="col-md-6">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">Phrase: @phraseName</h3>
                    </div>
                    <div class="box-body">
                        <table class="table table-bordered table-hover dataTable"
                               role="grid">
                            <thead>
                                <tr role="row">
                                    <th width="10px">#</th>
                                    <th>Task</th>
                                    <th>Owner</th>
                                    <th>Progress</th>
                                    <th>Label</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var task in item)
                                {
                                    var index = item.IndexOf(task);
                                    var seperateClass = index % 2 == 0 ? "odd" : "even";
                                    @if (task.Assignee.DisplayName == "Non Assigned")
                                    {
                                        task.Assignee.DisplayName = "N/A";
                                    }
                                    var percent = task.PercentCompleted + "%";
                                <tr role="row" class="@seperateClass">
                                    <td class="text-center">@(index + 1)</td>
                                    <td style="word-break: break-word;">@task.TaskTitle</td>

                                    <td class="text-center">@task.Assignee.DisplayName</td>
                                    <td class="text-center">
                                        @if (task.Status == TaskItemStatus.Working)
                                        {
                                            <div title="current working at @percent of completion" class="progress progress-xs progress-striped active">
                                                <div class="progress-bar progress-bar-success" style="width: @percent"></div>
                                            </div>
                                            <span class="label text-black">@percent completed</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Closed)
                                        {
                                            <div title="100% completed" class="progress progress-xs progress-striped active">
                                                <div class="progress-bar progress-bar-yellow" style="width: 100%"></div>
                                            </div>
                                            <span class="label text-black">Completed</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Failed)
                                        {
                                            <span class="label label-danger">Task is failed</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Open)
                                        {
                                            <span class="label bg-light-blue">Task is openning</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Feedback)
                                        {
                                            <span class="label bg-blue">Wait for feedback</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Resovled)
                                        {
                                            <span class="label bg-green">Need to be review</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Assiged)
                                        {
                                            <span class="label bg-yellow">Wait for implementation</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (task.Status == TaskItemStatus.Working)
                                        {
                                            <span class="badge bg-green">@task.Status</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Closed)
                                        {
                                            <span class="badge bg-yellow">@task.Status</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Failed)
                                        {
                                            <span class="badge bg-red">@task.Status</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Open)
                                        {
                                            <span class="badge bg-light-blue">@task.Status</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Feedback)
                                        {
                                            <span class="badge bg-blue">@task.Status</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Resovled)
                                        {
                                            <span class="badge bg-green">@task.Status</span>
                                        }
                                        else if (task.Status == TaskItemStatus.Assiged)
                                        {
                                            <span class="badge bg-yellow">@task.Status</span>
                                        }
                                    </td>
                                </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
