
@model IEnumerable<PhaseModel>


<div class="box-header with-border">
    <h3 class="box-title">Phases</h3>

    <div class="box-tools">
        <button type="button" class="btn btn-box-tool" data-widget="collapse">
            <i class="fa fa-minus"></i>
        </button>
    </div>
</div>
<div class="box-body no-padding">
    <ul class="nav nav-pills nav-stacked phase-list">
        @foreach (var p in Model)
        {
            <li title="@Html.PrintNumberWithText("task",p.TotalTask)">
                <a data-id="@p.Id" href="#">
                    <div><i class="fa fa-book text-success"></i> @p.PhaseName <span title="@Html.PrintNumberWithText("task",p.TotalTask)" class="label label-warning pull-right">@p.TotalTask</span></div>
                    @if (p.StartDate.HasValue)
                    {
                        var from = p.StartDate.Value.ToString("dd/MM/yyyy");
                        var to = p.EndDate.Value.ToString("dd/MM/yyyy");
                        <div class="date"><i class="fa fa-calendar"></i> <display-for asp-for="@from"></display-for> - <display-for asp-for="@to"></display-for></div>
                    }
                    <div class="status">
                        @switch (p.Status)
                        {
                            case PhaseStatus.Closed:
                                @:<i class="fa fa-check-circle text-success"></i> Closed
                                break;
                            case PhaseStatus.Failed:
                                @:<i class="fa fa-close text-red"></i> Failed
                                break;
                            case PhaseStatus.Open:
                                @:<i class="fa fa-circle-o text-yellow"></i> Open
                                break;
                        }
                    </div>
                </a>
            </li>
        }
    </ul>
</div>

