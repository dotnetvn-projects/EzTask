@model TaskViewModel
@{ 
    ViewBag.Title = "EzTask - " + Html.GetStringResource("TaskPageTitle", StringResourceType.TaskPage);
}

@section styles{
    <link rel="stylesheet" href="~/themes/plugins/iCheck/flat/green.css">
    <link rel="stylesheet" href="~/task/css/task.css">
    <link rel="stylesheet" href="~/lib/slider-bar/css/slider-bar-round.css">
}

@section header{
    <h1>
        @Html.GetStringResource("Task", StringResourceType.BreadCrumb)
        <small>@Html.GetStringResource("TaskTitle", StringResourceType.BreadCrumb)</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> @Html.GetStringResource("Dashboard", StringResourceType.BreadCrumb)</a></li>
        <li class="active">@Html.GetStringResource("Task", StringResourceType.BreadCrumb)</li>
    </ol>
}

<div class="row">
    <div class="col-md-3">
        <div class="box box-solid">
            <div class="box-header with-border">
                <h3 class="box-title">@Html.GetStringResource("Project", StringResourceType.TaskPage)</h3>
                <div class="box-body no-padding">
                    <div class="project-box">
                        <select asp-items="@Model.ProjectItems" class="form-control select2 project-list"></select>
                        @if (Model.Project.Owner.AccountId == User.Identity.AccountId())
                        {
                            <a data-toggle="modal" class="btn btn-block btn-addnew-phase">
                                <i class="fa fa-plus"></i> @Html.GetStringResource("AddNewPhase", StringResourceType.TaskPage)
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="box box-solid phase-list-panel">
            @await Component.InvokeAsync("PhaseList", new { projectId = Model.Project.ProjectId })
        </div>
        <div class="box box-solid collapsed-box">
            <partial name="_TaskLabels" />
        </div>
    </div>
    <div class="col-md-9 task-list-panel">
        @await Component.InvokeAsync("TaskList", new { projectId = Model.Project.ProjectId, phaseId = Model.Phase.Id })
    </div>
</div>

<div class="phase-template"></div>
<div class="task-template"></div>
<div class="task-history-template"></div>

@section Scripts{
    <script src="~/themes/plugins/iCheck/icheck.js"></script>
    <script src="~/task/js/task.js"></script>
    <script src="~/task/js/phase.js"></script>
    <script src="~/task/js/task-item.js"></script>
    <script src="~/lib/slider-bar/js/slider-bar.js"></script>
    <partial name="_ValidationScriptsPartial" />
}